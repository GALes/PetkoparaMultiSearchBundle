{
  "name": "Petkoparamultisearchbundle",
  "tagline": "Symfony bundle for Multi Search in entity with form and service.",
  "body": "# MultiSearchBundle\r\n\r\nThis bundle provides basic form type and service for multi search in doctrine. \r\n\r\n[![Build Status](https://scrutinizer-ci.com/g/petkopara/PetkoparaMultiSearchBundle/badges/build.png?b=master)](https://scrutinizer-ci.com/g/petkopara/PetkoparaMultiSearchBundle/build-status/master)\r\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/petkopara/PetkoparaMultiSearchBundle/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/petkopara/PetkoparaMultiSearchBundle/?branch=master)\r\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/462874f8-228d-4d9c-951e-e5c001a41c46/mini.png)](https://insight.sensiolabs.com/projects/462874f8-228d-4d9c-951e-e5c001a41c46)\r\n[![Latest Stable](https://img.shields.io/packagist/v/petkopara/multi-search-bundle.svg?maxAge=2592000?style=flat-square)](https://packagist.org/packages/petkopara/multi-search-bundle)\r\n[![Total Downloads](https://img.shields.io/packagist/dt/petkopara/multi-search-bundle.svg?maxAge=2592000?style=flat-square)](https://packagist.org/packages/petkopara/multi-search-bundle)\r\n\r\n## Installation \r\n\r\n\r\n### Using composer\r\n\r\n    composer require petkopara/multi-search-bundle\r\n\r\nAdd it to the `AppKernel.php` class:\r\n\r\n    new Petkopara\\MultiSearchBundle\\PetkoparaMultiSearchBundle(),\r\n\r\n\r\n##Usage\r\n\r\n### Form\r\n\r\nCreate your form type and include the multiSearchType in the buildForm function: \r\n\r\n    public function buildForm(FormBuilderInterface $builder, array $options)\r\n    {\r\n        $builder\r\n                ->add('search', MultiSearchType::class, array(\r\n                    'class' => 'AppBundle:Post', //required\r\n                    'search_fields' => array( //optional, if it's empty it will search in the all entity columns\r\n                        'name',\r\n                        'content'\r\n                     ), \r\n                     'comparison_type' = > 'wildcard' //optional, what type of comparison to applied ('wildcard','starts_with', 'ends_with', 'equals')\r\n                     \r\n                ))\r\n        ;\r\n    }\r\n\r\nIn the controller add call to the multi search service: \r\n\r\n    public function indexAction(Request $request)\r\n    {\r\n        $search = $request->get('search');\r\n        $em = $this->getDoctrine()->getManager();\r\n        $queryBuilder = $em->getRepository('AppBundle:Post')->createQueryBuilder('e');\r\n        $filterForm = $this->createForm('AppBundle\\Form\\PostFilterType');\r\n\r\n        // Bind values from the request\r\n        $filterForm->handleRequest($request);\r\n\r\n        if ($filterForm->isValid()) {\r\n            // Build the query from the given form object\r\n            $queryBuilder = $this->get('petkopara_multi_search.builder')->searchForm($queryBuilder, $filterForm->get('search'));\r\n        }\r\n        \r\n        ..\r\n    }\r\n\r\nRender your form in the view \r\n\r\n    {{ form_rest(filterForm) }}\r\n\r\n\r\n### Without form \r\n\r\n    $qb = $em->getRepository('AppBundle:Post')->createQueryBuilder('e');\r\n    $qb = $this->get('petkopara_multi_search.builder')->searchEntity($qb, 'AppBundle:Post', $search);\r\n    \r\n\r\n\r\n## Available Options\r\n\r\nThe provided type has 2 options:\r\n\r\n* `search_fields` - array of the entity columns that will be added in the search. If it's not set then will search in all columns\r\n* `search_comparison_type` -  how to compare the search term.   \r\n\r\n  * `wildcard` - it's equivalent to the %search% like search.\r\n\r\n  * `equals` - like operator without wildcards. Wildcards still can be used with `equals` if the search term contains *.\r\n\r\n  * `starts_with` - it's equivalent to the %search like search.\r\n  \r\n  * `ends_with` - it's equivalent to the search% like search.\r\n\r\n## Author\r\n\r\nPetko Petkov - petkopara@gmail.com\r\n\r\n\r\n## License\r\n\r\nMultiSearchBundle is licensed under the MIT License.\r\n\r\n\r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}